class Speakit extends SpeechSynthesis{static utteranceRate=1.05;static utterancePitch=1;static totalAvailableVoices=0;static totalVoices=[];static#e(){return new Promise((function(e,t){if("speechSynthesis"in window){let t=speechSynthesis.getVoices();t.length>0?(t.sort(((e,t)=>e.lang.localeCompare(t.lang))),Speakit.totalAvailableVoices=t.length,e(t)):speechSynthesis.onvoiceschanged=()=>{t=speechSynthesis.getVoices(),t.sort(((e,t)=>e.lang.localeCompare(t.lang))),Speakit.totalAvailableVoices=t.length,e(t)}}else t("SpeechSynthesis API is not available in this web browser.")}))}static async getVoices(){return 0===Speakit.totalVoices.length&&(Speakit.totalVoices=await this.#e()),Speakit.totalVoices}static readText(e,t,s){return new Promise((function(a,i){const n=new SpeechSynthesisUtterance(e);if(n.lang=t||"en-GB",n.rate=Speakit.utteranceRate||1.05,n.pitch=Speakit.utterancePitch||1,s){let e=speechSynthesis.getVoices().find((e=>e.name===s));e&&(n.voice=e)}n.onend=()=>a(),n.onerror=e=>i(e),speechSynthesis.speak(n)}))}static isSpeaking(){return speechSynthesis.speaking}static isPaused(){return speechSynthesis.paused}static pauseSpeaking(){speechSynthesis.pause()}static resumeSpeaking(){speechSynthesis.resume()}static stopSpeaking(){try{Speakit.pauseSpeaking(),speechSynthesis.cancel(e)}catch(e){return}}static TTStest(){return speechSynthesis?"ðŸŸ¢ Your web browser has supporting for Text-To-Speech.":"ðŸ”´ Your web browser does not supports Text-To-Speech. Consider to use a Webkit or Blink (Chromium) based web browser."}static about(){return"Copyright 2024-02-08: Fernando Omar Luna - @ mobile padawan.\n\nSend me an email to (ferproonline at gmail dot com) or DMme by Twitter/X (@ mobile padawan) just to tell me what kind of use you are giving to this class and/or just to 'say Hi!'.\n\nThis library is free of use and modify, but, please, don't remove this method."}}